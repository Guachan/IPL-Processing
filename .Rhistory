calib_standards <- rbind.fill(ARCHAEOL_Import, MGDAG_Import, Gly_Cer_Import, DGTS_Import, C16PA_Import, C16PDME_Import, C16PME_Import, C16PE_Import, C16PG_Import, SQDAG_Import, PC_ARCHAEOL_Import, PE_ARCHAEOL_Import, C21_PC_Import, C16_PC_Import, DGDAG_Import, C16_PAF_Import) %>%
filter(!grepl('N/F', Std_Area)) %>%
cols(Std_Area = col_numeric())
calib_standards <- rbind.fill(ARCHAEOL_Import, MGDAG_Import, Gly_Cer_Import, DGTS_Import, C16PA_Import, C16PDME_Import, C16PME_Import, C16PE_Import, C16PG_Import, SQDAG_Import, PC_ARCHAEOL_Import, PE_ARCHAEOL_Import, C21_PC_Import, C16_PC_Import, DGDAG_Import, C16_PAF_Import) %>%
filter(!grepl('N/F', Std_Area)) %>%
cols(Std_Area = col_number())
calib_standards <- rbind.fill(ARCHAEOL_Import, MGDAG_Import, Gly_Cer_Import, DGTS_Import, C16PA_Import, C16PDME_Import, C16PME_Import, C16PE_Import, C16PG_Import, SQDAG_Import, PC_ARCHAEOL_Import, PE_ARCHAEOL_Import, C21_PC_Import, C16_PC_Import, DGDAG_Import, C16_PAF_Import) %>%
filter(!grepl('N/F', Std_Area)) %>%
cols(Std_Area = col_number())
read_excel
?read_excel
path <- readxl_example("Compound Calibration Report_IPLS standards.xlsx")
path <- readxl("Compound Calibration Report_IPLS standards.xlsx")
?readxl
path <- read_excel("Compound Calibration Report_IPLS standards.xlsx")
lapply(excel_sheets(path), read_excel, path = path)
lapply(excel_sheets("Compound Calibration Report_IPLS standards.xlsx"), read_excel, path = path)
lapply(excel_sheets("Compound Calibration Report_IPLS standards.xlsx"), read_excel, "Compound Calibration Report_IPLS standards.xlsx" = "Compound Calibration Report_IPLS standards.xlsx")
lapply(excel_sheets("Compound Calibration Report_IPLS standards.xlsx"), read_excel, path = "Compound Calibration Report_IPLS standards.xlsx")
View(path)
lapply(excel_sheets("Compound Calibration Report_IPLS standards.xlsx", skip = 33), read_excel, path = "Compound Calibration Report_IPLS standards.xlsx")
path <- read_excel("Compound Calibration Report_IPLS standards.xlsx")
calibs <- path %>%
excel_sheets() %>%
set_names() %>%
map_df(~ read_excel(path = path, sheet = .x, range = "A35:H40"), .id = "sheet")
calibs <- path %>%
excel_sheets() %>%
set_names() %>%
map_df(~ read_excel(path = "Compound Calibration Report_IPLS standards.xlsx", sheet = .x, range = "A35:H40"), .id = "sheet")
calibs <- path %>%
excel_sheets() %>%
set_names() %>%
map_df(~ read_excel("Compound Calibration Report_IPLS standards.xlsx" = path, sheet = .x, range = "A35:H40"), .id = "sheet")
calibs <- path %>%
excel_sheets() %>%
set_names() %>%
map_df(~ read_excel("Compound Calibration Report_IPLS standards.xlsx" = "Compound Calibration Report_IPLS standards.xlsx", sheet = .x, range = "A35:H40"), .id = "sheet")
View(path)
path <- readxls("Compound Calibration Report_IPLS standards.xlsx")
path <- read_excel("Compound Calibration Report_IPLS standards.xlsx")
calibs <- path %>%
excel_sheets() %>%
set_names() %>%
map_df(~ read_excel(path = "Compound Calibration Report_IPLS standards.xlsx", sheet = .x, range = "A35:H40"), .id = "sheet")
?read_Excel
?read_excel
setwd("~/R/Processing IPLs")
calibs <- path %>%
excel_sheets() %>%
set_names() %>%
map_df(~ read_excel(path = "Compound Calibration Report_IPLS standards.xlsx", sheet = .x, range = "A35:H40"), .id = "sheet")
calibs <- "Compound Calibration Report_IPLS standards.xlsx" %>%
excel_sheets() %>%
set_names() %>%
map_df(~ read_excel(path = "Compound Calibration Report_IPLS standards.xlsx", sheet = .x, range = "A35:H40"), .id = "sheet")
View(calibs)
calibs <- "Compound Calibration Report_IPLS standards.xlsx" %>%
excel_sheets() %>%
set_names() %>%
map_df(~ read_excel(path = "Compound Calibration Report_IPLS standards.xlsx", sheet = .x, range = "A34:H40"), .id = "sheet")
?excel_sheets
"set_names
?set_names
?set_names
calibs <- "Compound Calibration Report_IPLS standards.xlsx" %>%
excel_sheets(1:3, c("Level", "Std_Amount", "Std_Area")) %>%
set_names() %>%
map_df(~ read_excel(path = "Compound Calibration Report_IPLS standards.xlsx", sheet = .x, range = "A35:C40"), .id = "sheet")
calibs <- "Compound Calibration Report_IPLS standards.xlsx" %>%
excel_sheets() %>%
set_names(1:3, c("Level", "Std_Amount", "Std_Area")) %>%
map_df(~ read_excel(path = "Compound Calibration Report_IPLS standards.xlsx", sheet = .x, range = "A35:C40"), .id = "sheet")
calibs <- "Compound Calibration Report_IPLS standards.xlsx" %>%
excel_sheets() %>%
set_names(1:3) %>%
map_df(~ read_excel(path = "Compound Calibration Report_IPLS standards.xlsx", sheet = .x, range = "A35:C40"), .id = "sheet")
calibs <- "Compound Calibration Report_IPLS standards.xlsx" %>%
excel_sheets() %>%
set_names([1:3], c("Level", "Std_Amount", "Std_Area")) %>%
calibs <- "Compound Calibration Report_IPLS standards.xlsx" %>%
excel_sheets() %>%
set_names(1:3, c("Level", "Std_Amount", "Std_Area")) %>%
map_df(~ read_excel(path = "Compound Calibration Report_IPLS standards.xlsx", sheet = .x, range = "A35:C40"), .id = "sheet")
calibs <- "Compound Calibration Report_IPLS standards.xlsx" %>%
excel_sheets() %>%
set_names(1:3, letters[1:3]) %>%
map_df(~ read_excel(path = "Compound Calibration Report_IPLS standards.xlsx", sheet = .x, range = "A35:C40"), .id = "sheet")
1:3
calibs <- "Compound Calibration Report_IPLS standards.xlsx" %>%
excel_sheets() %>%
set_names() %>%
map_df(~ read_excel(path = "Compound Calibration Report_IPLS standards.xlsx", sheet = .x, range = "A34:C40"), .id = "sheet")
calibs <- "Compound Calibration Report_IPLS standards.xlsx" %>%
excel_sheets() %>%
set_names(1:4, "a", "b", "c", "d") %>%
map_df(~ read_excel(path = "Compound Calibration Report_IPLS standards.xlsx", sheet = .x, range = "A35:C40"), .id = "sheet")
calibs <- "Compound Calibration Report_IPLS standards.xlsx" %>%
excel_sheets() %>%
set_names(1:4, letters[1:4]) %>%
map_df(~ read_excel(path = "Compound Calibration Report_IPLS standards.xlsx", sheet = .x, range = "A35:C40"), .id = "sheet")
calibs <- "Compound Calibration Report_IPLS standards.xlsx" %>%
excel_sheets() %>%
set_names(letters[1:5]) %>%
map_df(~ read_excel(path = "Compound Calibration Report_IPLS standards.xlsx", sheet = .x, range = "A35:C40"), .id = "sheet")
calibs <- "Compound Calibration Report_IPLS standards.xlsx" %>%
excel_sheets() %>%
set_names(letters[1:5]) %>%
map_df(~ read_excel(path = "Compound Calibration Report_IPLS standards.xlsx", sheet = .x, range = "A35:E40"), .id = "sheet")
calibs <- "Compound Calibration Report_IPLS standards.xlsx" %>%
excel_sheets() %>%
set_names(letters[1:5], nm = c("1", "2", "3", "4", "5")) %>%
map_df(~ read_excel(path = "Compound Calibration Report_IPLS standards.xlsx", sheet = .x, range = "A35:E40"), .id = "sheet")
calibs <- "Compound Calibration Report_IPLS standards.xlsx" %>%
excel_sheets() %>%
set_names(x=letters[1:5], nm = c("1", "2", "3", "4", "5")) %>%
map_df(~ read_excel(path = "Compound Calibration Report_IPLS standards.xlsx", sheet = .x, range = "A35:E40"), .id = "sheet")
calibs <- "Compound Calibration Report_IPLS standards.xlsx" %>%
excel_sheets() %>%
set_names(1:4, "a", "b", "c", "d") %>%
map_df(~ read_excel(path = "Compound Calibration Report_IPLS standards.xlsx", sheet = .x, range = "A35:D40"), .id = "sheet")
calibs <- "Compound Calibration Report_IPLS standards.xlsx" %>%
excel_sheets() %>%
set_names() %>%
map_df(~ read_excel(path = "Compound Calibration Report_IPLS standards.xlsx", sheet = .x, range = "A35:D40"), .id = "sheet")
View(calib_standards2)
View(calibs)
?read_excel
calibs <- "Compound Calibration Report_IPLS standards.xlsx" %>%
excel_sheets() %>%
set_names() %>%
map_df(~ read_excel(path = "Compound Calibration Report_IPLS standards.xlsx", sheet = .x, skip = 33), .id = "sheet")
View(calibs)
calibs <- "Compound Calibration Report_IPLS standards.xlsx" %>%
excel_sheets() %>%
set_names() %>%
map_df(~ read_excel(path = "Compound Calibration Report_IPLS standards.xlsx", sheet = .x, range = "A35:C40"), .id = "sheet")
?excel_sheets
calib_standards <- rbind.fill(ARCHAEOL_Import, MGDAG_Import, Gly_Cer_Import, DGTS_Import, C16PA_Import, C16PDME_Import, C16PME_Import, C16PE_Import, C16PG_Import, SQDAG_Import, PC_ARCHAEOL_Import, PE_ARCHAEOL_Import, C21_PC_Import, C16_PC_Import, DGDAG_Import, C16_PAF_Import) %>%
filter(!grepl('N/F', Std_Area)) %>%
cols(Std_Area = col_number())
calib_standards <- rbind.fill(ARCHAEOL_Import, MGDAG_Import, Gly_Cer_Import, DGTS_Import, C16PA_Import, C16PDME_Import, C16PME_Import, C16PE_Import, C16PG_Import, SQDAG_Import, PC_ARCHAEOL_Import, PE_ARCHAEOL_Import, C21_PC_Import, C16_PC_Import, DGDAG_Import, C16_PAF_Import) %>%
filter(!grepl('N/F', Std_Area)) %>%
transform(Std_Area = as.numeric(Std_Area))
calib_standards
ggplot(calib_standards, aes(x = Std_Amount, y = factor(Std_Area))) +
geom_point() + facet_wrap(~Compound, scales = 'free')
calib_standards <- rbind.fill(ARCHAEOL_Import, MGDAG_Import, Gly_Cer_Import, DGTS_Import, C16PA_Import, C16PDME_Import, C16PME_Import, C16PE_Import, C16PG_Import, SQDAG_Import, PC_ARCHAEOL_Import, PE_ARCHAEOL_Import, C21_PC_Import, C16_PC_Import, DGDAG_Import, C16_PAF_Import) %>%
filter(!grepl('N/F', Std_Area)) %>%
transform(Std_Area = as.factor(Std_Area))
ggplot(calib_standards, aes(x = Std_Amount, y = factor(Std_Area))) +
geom_point() + facet_wrap(~Compound, scales = 'free')
calib_standards <- rbind.fill(ARCHAEOL_Import, MGDAG_Import, Gly_Cer_Import, DGTS_Import, C16PA_Import, C16PDME_Import, C16PME_Import, C16PE_Import, C16PG_Import, SQDAG_Import, PC_ARCHAEOL_Import, PE_ARCHAEOL_Import, C21_PC_Import, C16_PC_Import, DGDAG_Import, C16_PAF_Import) %>%
filter(!grepl('N/F', Std_Area)) %>%
transform(Std_Area = as.numeric(Std_Area))
ggplot(calib_standards, aes(x = Std_Amount, y = factor(Std_Area))) +
geom_point() + facet_wrap(~Compound, scales = 'free')
ggplot(calib_standards, aes(x = Std_Amount, y = Std_Area)) +
geom_point() + facet_wrap(~Compound, scales = 'free')
View(calib_standards)
calib_standards <- rbind.fill(ARCHAEOL_Import, MGDAG_Import, Gly_Cer_Import, DGTS_Import, C16PA_Import, C16PDME_Import, C16PME_Import, C16PE_Import, C16PG_Import, SQDAG_Import, PC_ARCHAEOL_Import, PE_ARCHAEOL_Import, C21_PC_Import, C16_PC_Import, DGDAG_Import, C16_PAF_Import) %>%
filter(!grepl('N/F', Std_Area)) %>%
transform(Std_Area = as.numeric(Std_Area)) %>%
filter(Std_Area >0)
ggplot(calib_standards, aes(x = Std_Amount, y = Std_Area)) +
geom_point() + facet_wrap(~Compound, scales = 'free')
ggplot(calib_standards, aes(x = Std_Amount, y = Std_Area)) +
geom_point() + geom_smooth(method = "1m", se = FALSE) + facet_wrap(~Compound, scales = 'free')
ggplot(calib_standards, aes(x = Std_Amount, y = Std_Area)) +
geom_point() + geom_smooth(method = "lm", se = FALSE) + facet_wrap(~Compound, scales = 'free')
?geom_smooth
ggplot(calib_standards, aes(x = Std_Amount, y = Std_Area)) +
geom_point(size = 3) + geom_smooth(method = "lm", se = FALSE, size = 1) + facet_wrap(~Compound, scales = 'free')
ggplot(calib_standards, aes(x = Std_Amount, y = Std_Area)) +
geom_point(size = 3) + geom_smooth(method = "lm", se = TRUE, size = 1) + facet_wrap(~Compound, scales = 'free')
ggplot(calib_standards, aes(x = Std_Amount, y = Std_Area)) +
geom_point(size = 3) + geom_smooth(method = "lm", se = TRUE, size = 1) + geom_smooth(method = "glm", se = TRUE, size = 1) + facet_wrap(~Compound, scales = 'free')
ggplot(calib_standards, aes(x = Std_Amount, y = Std_Area)) +
geom_point(size = 3) + geom_smooth(method = "lm", se = TRUE, size = 1) + geom_smooth(method = "lm",formula= (y ~ exp(x)), se = TRUE, size = 1) + facet_wrap(~Compound, scales = 'free')
ggplot(calib_standards, aes(x = Std_Amount, y = Std_Area)) +
geom_point(size = 3) + geom_smooth(method = "lm", se = TRUE, size = 1) + geom_smooth(method = "glm",formula= (y ~ exp(x)), se = TRUE, size = 1) + facet_wrap(~Compound, scales = 'free')
ggplot(calib_standards, aes(x = Std_Amount, y = Std_Area)) +
geom_point(size = 3) + geom_smooth(method = "lm", se = TRUE, size = 1) +   geom_smooth(method = "glm",
family = gaussian(link="log"),
aes(colour = "Exponential")) + facet_wrap(~Compound, scales = 'free')
ggplot(calib_standards, aes(x = Std_Amount, y = Std_Area)) +
geom_point(size = 3) +
#geom_smooth(method = "lm", se = TRUE, size = 1) +
geom_smooth(method = "glm",
family = gaussian(link="log"),
aes(colour = "Exponential")) + facet_wrap(~Compound, scales = 'free')
ggplot(calib_standards, aes(x = Std_Amount, y = Std_Area)) +
geom_point(size = 3) +
geom_smooth(method = "lm",aes (colour = "Linear"), se = TRUE, size = 1) +
geom_smooth(method = "glm",
family = gaussian(link="log"),
aes(colour = "Exponential")) + facet_wrap(~Compound, scales = 'free')
ggplot(calib_standards, aes(x = Std_Amount, y = Std_Area)) +
geom_point(size = 3) +
geom_smooth(method = "lm",aes (colour = "Linear"), se = TRUE, size = 1) +
scale_color_manual(name = "Fits",
breaks = c("Linear"),
values = c("blue")) +
geom_smooth(method = "glm",
family = gaussian(link="log"),
aes(colour = "Exponential")) +
scale_color_manual(name = "Fits",
breaks = c("Linear","Exponential"),
values = c("red","blue")) +
facet_wrap(~Compound, scales = 'free')
ggplot(calib_standards, aes(x = Std_Amount, y = Std_Area)) +
geom_point(size = 3) +
geom_smooth(method = "lm",aes (colour = "Linear"), se = TRUE, size = 1) +
scale_color_manual(name = "Fits",
breaks = c("Linear"),
values = c("blue")) +
stat_smooth(method = 'nls', formula = y ~ a*exp(b *x), aes(colour = 'Exponential'), se = FALSE, start = list(a=1,b=1))
ggplot(calib_standards, aes(x = Std_Amount, y = Std_Area)) +
geom_point(size = 3) +
geom_smooth(method = "lm",aes (colour = "Linear"), se = TRUE, size = 1) +
scale_color_manual(name = "Fits",
breaks = c("Linear"),
values = c("blue")) +
stat_smooth(method = 'nls', formula = y ~ a*exp(b *x), aes(colour = 'Exponential'), se = FALSE, start = list(a=1,b=1)) +
facet_wrap(~Compound, scales = 'free')
ggplot(calib_standards, aes(x = Std_Amount, y = Std_Area)) +
geom_point(size = 3) +
geom_smooth(method = "lm",aes (colour = "Linear"), se = TRUE, size = 1) +
scale_color_manual(name = "Fits",
breaks = c("Linear"),
values = c("blue")) +
stat_smooth(method = 'nls', formula = y ~ a*exp(b *x), aes(colour = 'Exponential'), se = FALSE) +
facet_wrap(~Compound, scales = 'free')
ggplot(calib_standards, aes(x = Std_Amount, y = Std_Area)) +
geom_point(size = 3) +
geom_smooth(method = "lm",aes (colour = "Linear"), se = TRUE, size = 1) +
scale_color_manual(name = "Fits",
breaks = c("Linear"),
values = c("blue")) +
geom_smooth(method = "glm",
family = gaussian(link="log"),
aes(colour = "Exponential")) +
scale_color_manual(name = "Fits",
breaks = c("Linear","Exponential"),
values = c("red","blue")) +
facet_wrap(~Compound, scales = 'free')
?stat_smooth
ggplot(calib_standards, aes(x = Std_Amount, y = Std_Area)) +
geom_point(size = 3) +
geom_smooth(method = "lm",aes (colour = "Linear"), se = TRUE, size = 1) +
scale_color_manual(name = "Fits",
breaks = c("Linear"),
values = c("blue")) +
geom_smooth(method = "lm", formula = y ~ exp(x),
aes(colour = "Exponential")) +
scale_color_manual(name = "Fits",
breaks = c("Linear","Exponential"),
values = c("red","blue")) +
facet_wrap(~Compound, scales = 'free')
ggplot(calib_standards, aes(x = Std_Amount, y = Std_Area)) +
geom_point(size = 3) +
geom_smooth(method = "lm",aes (colour = "Linear"), se = TRUE, size = 1) +
scale_color_manual(name = "Fits",
breaks = c("Linear"),
values = c("blue")) +
geom_smooth(method = "glm", formula = y ~ exp(x),
aes(colour = "Exponential")) +
scale_color_manual(name = "Fits",
breaks = c("Linear","Exponential"),
values = c("red","blue")) +
facet_wrap(~Compound, scales = 'free')
ggplot(calib_standards, aes(x = Std_Amount, y = Std_Area)) +
geom_point(size = 3) +
geom_smooth(method = "lm",aes (colour = "Linear"), se = TRUE, size = 1) +
scale_color_manual(name = "Fits",
breaks = c("Linear"),
values = c("blue")) +
geom_smooth(method = "lm", formula = y ~ a*exp(b*x),
aes(colour = "Exponential")) +
scale_color_manual(name = "Fits",
breaks = c("Linear","Exponential"),
values = c("red","blue")) +
facet_wrap(~Compound, scales = 'free')
ggplot(calib_standards, aes(x = Std_Amount, y = Std_Area)) +
geom_point(size = 3) +
geom_smooth(method = "lm",aes (colour = "Linear"), se = TRUE, size = 1) +
scale_color_manual(name = "Fits",
breaks = c("Linear"),
values = c("blue")) +
geom_smooth(method = "lm", formula = y ~ a*exp(b*x), start = list(a=1,b=1),
aes(colour = "Exponential")) +
scale_color_manual(name = "Fits",
breaks = c("Linear","Exponential"),
values = c("red","blue")) +
facet_wrap(~Compound, scales = 'free')
f
ggplot(calib_standards, aes(x = Std_Amount, y = Std_Area)) +
knitr::opts_chunk$set(echo = TRUE)
library(plyr)
library(tidyverse)
library(ggplot2)
library(latex2exp)
library(readxl)
library(purrr)
path <- read_excel("Compound Calibration Report_IPLS standards.xlsx")
path %>%
excel_sheets() %>%
set_names() %>%
map(read_excel, path = path)
path %>%
excel_sheets() %>%
set_names() %>%
map(read_excel, path = "Compound Calibration Report_IPLS standards.xlsx")
read_excel("Compound Calibration Report_IPLS standards.xlsx") %>%
excel_sheets() %>%
set_names() %>%
map(read_excel, path = "Compound Calibration Report_IPLS standards.xlsx")
View(path)
path %>%
excel_sheets() %>%
set_names() %>%
map(read_excel, path = path)
("Compound Calibration Report_IPLS standards.xlsx")
path %>%
excel_sheets() %>%
set_names() %>%
map(read_excel, path = path)
path <- read_xls("Compound Calibration Report_IPLS standards.xlsx") %>%
excel_sheets() %>%
set_names() %>%
map(read_excel, path = path)
?map
read_all_excel<-function("Compound Calibration Report_IPLS standards.xlsx"){
path <- readxl_example("deaths.xlsx")
path <- readxl_example("Compound Calibration Report_IPLS standards.xlsx")
path <- read_file("Compound Calibration Report_IPLS standards.xlsx")
calibs <- path %>%
excel_sheets() %>%
set_names() %>%
map_df(~ read_excel(path = path, sheet = .x, range = "A5:F15"), .id = "sheet")
path <- read_excel("Compound Calibration Report_IPLS standards.xlsx")
calibs <- path %>%
excel_sheets() %>%
set_names() %>%
map_df(~ read_excel(path = path, sheet = .x, range = "A5:F15"), .id = "sheet")
path <- read_excel("Compound Calibration Report_IPLS standards.xlsx", sheet = sheet)
path <- read_excel("Compound Calibration Report_IPLS standards.xlsx")
View(path)
calibs <- path %>%
excel_sheets() %>%
set_names() %>%
map_df(~ read_excel(path = path, sheet = .x, range = "A5:F15"), .id = "sheet")
patha <- read_excel("Compound Calibration Report_IPLS standards.xlsx")
calibs <- patha %>%
excel_sheets() %>%
set_names() %>%
map_df(~ read_excel(path = patha, sheet = .x, range = "A5:F15"), .id = "sheet")
path <- read_excel("Compound Calibration Report_IPLS standards.xlsx")
calibs <- path %>%
excel_sheets() %>%
set_names() %>%
map_df(~ read_excel(path = "Compound Calibration Report_IPLS standards.xlsx", sheet = .x, range = "A5:F15"), .id = "sheet")
?read_excel
path <- read_excel("Compound Calibration Report_IPLS standards.xlsx")
calibs <- path %>%
excel_sheets() %>%
set_names() %>%
map_df(~ read_excel("Compound Calibration Report_IPLS standards.xlsx", sheet = .x, range = "A5:F15"), .id = "sheet")
calibs <- "Compound Calibration Report_IPLS standards.xlsx" %>%
excel_sheets() %>%
set_names() %>%
map_df(~ read_excel("Compound Calibration Report_IPLS standards.xlsx", sheet = .x, range = "A5:F15"), .id = "sheet")
View(calibs)
calibs <- "Compound Calibration Report_IPLS standards.xlsx" %>%
excel_sheets() %>%
set_names() %>%
map_df(~ read_excel("Compound Calibration Report_IPLS standards.xlsx", sheet = .x, range = "A35:C40"), .id = "sheet")
View(calibs)
path <- read_excel("Compound Calibration Report_IPLS standards.xlsx")
calibs <- "Compound Calibration Report_IPLS standards.xlsx" %>%
excel_sheets() %>%
set_names() %>%
map_df(~ read_excel("Compound Calibration Report_IPLS standards.xlsx", sheet = .x, range = "A34:C40"), .id = "sheet")
calibs <- "Compound Calibration Report_IPLS standards.xlsx" %>%
excel_sheets() %>%
set_names() %>%
map_df(~ read_excel("Compound Calibration Report_IPLS standards.xlsx", sheet = .x), .id = "sheet")
View(calibs)
calibs <- "Compound Calibration Report_IPLS standards.xlsx" %>%
excel_sheets() %>%
set_names() %>%
map_df(~ read_excel("Compound Calibration Report_IPLS standards.xlsx", sheet = .x, skip = 33), .id = "sheet")
?map_df
?set_names
calibs <- "Compound Calibration Report_IPLS standards.xlsx" %>%
excel_sheets() %>%
set_names(1:4, c("a", "b", "c", "d")) %>%
map_df(~ read_excel("Compound Calibration Report_IPLS standards.xlsx", sheet = .x, range = "A35:C40"), .id = "sheet")
calibs <- "Compound Calibration Report_IPLS standards.xlsx" %>%
excel_sheets() %>%
set_names(1:4, nm = c("a", "b", "c", "d")) %>%
map_df(~ read_excel("Compound Calibration Report_IPLS standards.xlsx", sheet = .x, range = "A35:C40"), .id = "sheet")
calibs <- "Compound Calibration Report_IPLS standards.xlsx" %>%
excel_sheets() %>%
set_names(1:4, "a", "b", "c", "d") %>%
map_df(~ read_excel("Compound Calibration Report_IPLS standards.xlsx", sheet = .x, range = "A35:C40"), .id = "sheet")
names <- c("Level", "Std_Amount", "Std_Area")
calibs <- "Compound Calibration Report_IPLS standards.xlsx" %>%
excel_sheets() %>%
set_names(names) %>%
map_df(~ read_excel("Compound Calibration Report_IPLS standards.xlsx", sheet = .x, range = "A35:C40"), .id = "sheet")
calibs <- "Compound Calibration Report_IPLS standards.xlsx" %>%
excel_sheets() %>%
set_names(1:3, names) %>%
map_df(~ read_excel("Compound Calibration Report_IPLS standards.xlsx", sheet = .x, range = "A35:C40"), .id = "sheet")
names <- c("Std_Amount", "Std_Area")
calibs <- "Compound Calibration Report_IPLS standards.xlsx" %>%
excel_sheets() %>%
set_names(1:2, names) %>%
map_df(~ read_excel("Compound Calibration Report_IPLS standards.xlsx", sheet = .x, range = "B35:C40"), .id = "sheet")
calibs <- "Compound Calibration Report_IPLS standards.xlsx" %>%
excel_sheets() %>%
set_names(1:2) %>%
map_df(~ read_excel("Compound Calibration Report_IPLS standards.xlsx", sheet = .x, range = "B35:C40"), .id = "sheet")
calibs <- "Compound Calibration Report_IPLS standards.xlsx" %>%
excel_sheets() %>%
set_names(1:2, nm = NULL) %>%
map_df(~ read_excel("Compound Calibration Report_IPLS standards.xlsx", sheet = .x, range = "B35:C40"), .id = "sheet")
calibs <- "Compound Calibration Report_IPLS standards.xlsx" %>%
excel_sheets() %>%
set_names(1:2, nm = names) %>%
map_df(~ read_excel("Compound Calibration Report_IPLS standards.xlsx", sheet = .x, range = "B35:C40"), .id = "sheet")
linear_fit <- lm(formula = Std_Area ~ Std_Amount, data = calib_standards, subset = Compound)
linear_fit <- lm(formula = Std_Area ~ Std_Amount, data = calib_standards)
View(linear_fit)
?lm
lin_fit <- function(dat, offset = 1952) {
the_fit <- lm(Std_Area ~ Std_Amount, dat)
setNames(coef(the_fit), c("intercept", "slope"))
}
lin_fit <- function(dat) {
the_fit <- lm(Std_Area ~ Std_Amount, dat)
setNames(coef(the_fit), c("intercept", "slope"))
}
lin_fits_df <- calib_standards %>%
group_by(Compound) %>%
do(lin_fit(.))
lin_fits_df <- calib_standards %>%
group_by(Compound)
View(lin_fits_df)
lin_fit(calib_standards %>% filter(Compound = ARCHAEOL))
lin_fit(calib_standards %>% filter(Compound == "ARCHAEOL"))
?setNames
?t
t(calib_standards)
lin_fits_df <- calib_standards %>%
group_by(Compound) %>%
do(lin_fit(.))
?do
lin_fits_df <- calib_standards %>%
group_by(Compound) %>%
do(lin_fit())
lin_fits_df <- calib_standards %>%
group_by(Compound) %>%
do(lin_fit(.))
lin_fit(calib_standards %>% filter(Compound == "ARCHAEOL")) ##Test function works on 1 compound
setNames(data.frame(t(coef(the_fit))), c("intercept", "slope")) ## Not sure I understand why this works
lin_fit <- function(dat) {
the_fit <- glm(Std_Area ~ Std_Amount, dat)
setNames(data.frame(t(coef(the_fit))), c("intercept", "slope"))
lin_fit(calib_standards %>% filter(Compound == "ARCHAEOL")) ##Test function works on 1 compound
lin_fit(calib_standards %>% filter(Compound == "ARCHAEOL"))
lin_fit(calib_standards %>% filter(Compound == "ARCHAEOL"))
ggplot(calib_standards, aes(x = Std_Amount, y = Std_Area)) +
geom_point(size = 3) +
geom_smooth(method = "glm", formula = y~x, family = gaussian(link = 'log')) +
scale_color_manual(name = "Fits",
breaks = c("Linear","Exponential"),
values = c("red","blue")) +
facet_wrap(~Compound, scales = 'free')
calib_standards <- rbind.fill(ARCHAEOL_Import, MGDAG_Import, Gly_Cer_Import, DGTS_Import, C16PA_Import, C16PDME_Import, C16PME_Import, C16PE_Import, C16PG_Import, SQDAG_Import, PC_ARCHAEOL_Import, PE_ARCHAEOL_Import, C21_PC_Import, C16_PC_Import, DGDAG_Import, C16_PAF_Import) %>%
filter(!grepl('N/F', Std_Area)) %>%
transform(Std_Area = as.numeric(Std_Area)) %>%
filter(Std_Area >0) %>%  ## Some standards possibly did not inject properly?
data.frame()
lin_fit <- function(dat) {
the_fit <- glm(Std_Area ~ Std_Amount, dat)
setNames(data.frame(t(coef(the_fit))), c("intercept", "slope")) ## Not sure I understand why this works
}
lin_fit(calib_standards %>% filter(Compound == "ARCHAEOL")) ##Test function works on 1 compound
calib_standards <- rbind.fill(ARCHAEOL_Import, MGDAG_Import, Gly_Cer_Import, DGTS_Import, C16PA_Import, C16PDME_Import, C16PME_Import, C16PE_Import, C16PG_Import, SQDAG_Import, PC_ARCHAEOL_Import, PE_ARCHAEOL_Import, C21_PC_Import, C16_PC_Import, DGDAG_Import, C16_PAF_Import) %>%
filter(!grepl('N/F', Std_Area)) %>%
transform(Std_Area = as.numeric(Std_Area)) %>%
filter(Std_Area >0) %>%  ## Some standards possibly did not inject properly?
data.frame()
lin_fit <- function(dat) {
the_fit <- glm(Std_Area ~ Std_Amount, dat)
setNames(data.frame(t(coef(the_fit))), c("intercept", "slope")) ## Not sure I understand why this works
}
lin_fit(calib_standards %>% filter(Compound == "ARCHAEOL")) ##Test function works on 1 compound
setNames(data.frame(t(coef(the_fit))), c("intercept", "slope")) ## Not sure I understand why this works
lin_fit <- function(dat) {
the_fit <- lm(Std_Area ~ Std_Amount, dat)
setNames(data.frame(t(coef(the_fit))), c("intercept", "slope")) ## Not sure I understand why this works
}
lin_fit(calib_standards %>% filter(Compound == "ARCHAEOL")) ##Test function works on 1 compound
lin_fits_df <- calib_standards %>%
group_by(Compound) %>%
do(lin_fit(.))
View(lin_fits_df)
View(calib_standards)
summary(calib_standards)
